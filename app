import streamlit as st
from core.economy import simulate_cycle, EconomicState
from core.cashout import compute_cashout_rights
from core.dao import get_vote_power
from core.legal import compliance_snapshot

st.set_page_config(
    page_title="FANX Ecosystem Simulation",
    layout="wide"
)

st.title("ğŸ’  FANX Ecosystem Simulation v1.0")
st.caption("KapalÄ± devre dijital ekonomi â€¢ Deflasyonist arz â€¢ DAO kontrollÃ¼ denge")

st.markdown("""
Bu arayÃ¼z, FANX ekonomisinin Ã§ekirdek dÃ¶ngÃ¼sÃ¼nÃ¼ gÃ¶sterir:

**User â†’ XP â†’ Credit â†’ Burn â†’ Valueâ†‘ â†’ NEVâ†‘ â†’ Rewardâ†‘ â†’ Userâ†‘**

- KullanÄ±cÄ± gÃ¶rev yapar â†’ XP kazanÄ±r  
- XP â†’ Credit'e dÃ¶ner  
- Her iÅŸlemde yakÄ±m (burn) olur â†’ arz dÃ¼ÅŸer  
- Arz dÃ¼ÅŸtÃ¼kÃ§e birim deÄŸer artar  
- NEV bÃ¼yÃ¼dÃ¼kÃ§e Ã¶dÃ¼l havuzu gÃ¼Ã§lenir  
- Topluluk daha Ã§ok motive olur
""")

st.header("1. KullanÄ±cÄ± KatÄ±lÄ±m Girdileri")

col1, col2, col3 = st.columns(3)
with col1:
    daily_tasks = st.number_input("GÃ¼nlÃ¼k GÃ¶rev SayÄ±sÄ±", min_value=0, max_value=10000, value=120)
with col2:
    avg_quality = st.slider("Kalite Skoru (0â€“1)", 0.0, 1.0, 0.8)
with col3:
    users = st.number_input("Aktif KullanÄ±cÄ± SayÄ±sÄ±", min_value=1, max_value=100_000_000, value=100_000)

st.header("2. Sistem Parametreleri (DAO AyarlarÄ±)")
col4, col5, col6 = st.columns(3)
with col4:
    burn_rate = st.slider("YakÄ±m OranÄ± Î±", 0.0, 0.10, 0.025)
with col5:
    fan_pool_share = st.slider("Fan Pool PayÄ±", 0.10, 0.60, 0.40)
with col6:
    supply_now = st.number_input("Mevcut Arz (Supply_t)", 1_000.0, 5_000_000_000.0, 1_000_000_000.0, step=1_000_000.0)

st.header("3. SimÃ¼lasyonu Ã‡alÄ±ÅŸtÄ±r")

if st.button("â–¶ Ekonomiyi SimÃ¼le Et"):
    state: EconomicState = simulate_cycle(
        num_users=users,
        actions_per_day=daily_tasks,
        quality_score=avg_quality,
        burn_rate=burn_rate,
        current_supply=supply_now,
        fan_pool_share=fan_pool_share
    )
    st.success("SimÃ¼lasyon tamamlandÄ±.")
    st.metric("Toplam XP", f"{state.total_xp:,.0f}")
    st.metric("YakÄ±lan FANX", f"{state.burn_amount:,.0f}")
    st.metric("Yeni Arz", f"{state.new_supply:,.0f}")
    st.metric("NEV", f"${state.nev:,.0f}")
    st.metric("Birim DeÄŸer", f"${state.value_per_credit:,.5f}")
    st.metric("Ortalama Fan Ã–dÃ¼lÃ¼", f"${state.reward_avg:,.4f}")
else:
    st.info("Parametreleri seÃ§in ve 'Ekonomiyi SimÃ¼le Et' tuÅŸuna basÄ±n.")
